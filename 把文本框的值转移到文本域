import java.awt.Button;
import java.awt.FlowLayout;
import java.awt.Frame;
import java.awt.TextArea;
import java.awt.TextField;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;

public class haha {
	public static void main(String[] args) {
			
			//用适配器类改进窗体关闭案例
			//创建窗体对象
			/*Frame f=new Frame("窗口关闭案例");
			//设置窗体属性
			f.setBounds(400,200,400,300);
			f.addWindowListener(new WindowAdapter()
			//适配器类，不用实现所有的类
			{
				public void windowClosing(WindowEvent e)
				{
					System.exit(0);
				}
			}
			);
			f.setVisible(true);*/
			/*
			 * 把按钮添加到窗体，并对按钮添加一个点击事件
			 * A:创建窗体对象
			 * B:创建按钮对象
			 * C:按按钮添加到窗体
			 * D:窗体显示
			 */
			//创建窗体
			/*Frame f=new Frame("添加按钮");
			//设置属性
			f.setBounds(400,200,400,300);
			//创建按钮对象
			Button bt=new Button("Im a Button");
			Button bt2=new Button("Button2");
			Button bt3=new Button("Button3");
			f.add(bt2);
			f.add(bt3);
			//设置排列方式
			f.setLayout(new FlowLayout());
			//bt.setSize(20,10);
			//把按钮添加到窗体
			f.add(bt);
			//设置窗体可以关闭
			f.addWindowListener(new WindowAdapter()
			{
				public void windowClosing(WindowEvent e)
				{
					System.exit(0);
				}
			});
			bt2.addActionListener(new ActionListener()
			{

				@Override
				public void actionPerformed(ActionEvent e)
				{
					System.out.println("你再点一下试试");
				}
			});
			f.setVisible(true);*/
		//****************************
			//把文本框的值转移到文本域案例
			//创建窗体对象
			Frame f=new Frame("DataTran");
			f.setBounds(400,200,400,300);
			f.setLayout(new FlowLayout());
			//创建文本框
			final TextField tf=new TextField(30);
			//创建按钮
			Button bt=new Button("DataTran");
			//创建文本域
			final TextArea ta=new TextArea(10,40);
			//把组建添加到窗体
			f.add(tf);
			f.add(bt);
			f.add(ta);
			//对按钮添加事件
			bt.addActionListener(new ActionListener()
			{
				public void actionPerformed(ActionEvent e)
				{
					//获取文本框的值
					String tf_str=tf.getText().trim();  //trim用于清除后面不小心加入的空格
					//清空数据
					tf.setText("");  //获取后将原来的数据清空
					//设置文本域
					//ta.setText(tf_str);  //这个方法每次都会重新赋值
					//追加和换行
					ta.append(tf_str+"\r\n");  //增加换行功能
					//获取光标
					tf.requestFocus();
				}
			});
			//设置从窗体关闭
			f.addWindowListener(new WindowAdapter()
			{
				@Override
				public void windowClosing(WindowEvent e)
				{
					System.exit(0);
				}
			});
			f.setVisible(true);  //显示窗体
		}
	}



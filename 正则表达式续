import java.util.regex.Matcher;
import java.util.regex.Pattern;


/*
 * 替换功能
 * String类的 public String replaceAll(String regex,String replacement)
 */
public class uju7j {
		public static void main(String[] args) {
			 
			//String s="hello122312423world923864823java";
			//将数字全部转换为一个*号
			//String regex="\\d+";
			//String ss="*";
			//************************
			//将每个数字对应转成一个*号
			//String regex="\\d";
			//直接将数字干掉
			/*String regex="\\d+";
			String ss="";
			String result=s.replaceAll(regex, ss);
			System.out.println(result);*/
			//**********************************
			//Patern和Matcher类的使用
			//把正则表达式编译成模式对象
			/*Pattern p=Pattern.compile("a*b");  //表示开始是若干个a最后是b
			//通过模式对象得到匹配对象，传入被匹配的字符串
			Matcher m=p.matcher("aaaaab");
			//调用匹配器对象的功能，该方法需要匹配所有区域相同才正确！！！
			boolean b=m.matches();
			System.out.println(b);
			//上面的作为是为创建一个范本，下面为常规做法
			String s1="aaaaab";
			String 	regex="a*b";
			boolean bb=s1.matches(regex);
			System.out.println(bb);*/
			//************************************
			//获取字符串三个字符组成的单词
			String s="da jia ting wo shuo ni men dou shi sha bi zhe shidashihua";
			String regex="\\b\\w{3}\\b";  //注意这里必须双斜杠！！！！！
			//在这里必须加入单词边界，不然会截取四个字符的前三个
			//把规则编译成模式对象
			Pattern p=Pattern.compile(regex);
			//通过模式对象找到匹配器对象
			Matcher m=p.matcher(s);
			//调用匹配器对象，通过find方法查找有没有满足条件的对象
			//public boolean find()
			/*boolean flag=m.find();
			System.out.println(flag);
			//得到值得操作
			String ss=m.group();
			System.out.println(ss);
			String s1=m.group();
			System.out.println(s1);*/
			//一定要先find才能group
			while(m.find())
			{
				System.out.println(m.group());
			}
		}
}



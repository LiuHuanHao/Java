import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Scanner;



public class haha {
	public static void main(String[] args) throws IOException{	
		
		while(true)
		{
			System.out.println("-----欢迎光临-------------");
			System.out.println("1.登录");
			System.out.println("2.注册");
			System.out.println("3.退出");
			System.out.println("请输入你的选择");
			Scanner sc=new Scanner(System.in);
			String choiceString=sc.nextLine();
			UserDo ud=new UserDoImpl();    //创建一个 UserDoImple对象
			switch(choiceString)
			{
			case "1":
				System.out.println("-----登录界面-------");
				System.out.println("请输入用户名:");
				String username=sc.nextLine();
				System.out.println("请输入密码:");
				String password=sc.nextLine();
				//调用登录功能
				boolean flag=ud.isLogin(username,password);  //判断是否是正确的用户信息
				if(flag)
				{
					System.out.println("登录成功，可以开始玩游戏了");
					System.out.println("你玩吗(y/n)");
					while(true)
					{
						String resultString=sc.nextLine();
						if(resultString.equalsIgnoreCase("y"))
						{
							GuessNumber.start();
							System.out.println("你还玩吗?(y/n)");
						}
						else
						{
							break;
						}
					}
					System.out.println("谢谢使用，欢迎下次再来");
					System.exit(0);   //退出程序
				}
				else
				{
					System.out.println("用户名或密码有误，登录失败");
				}
				break;   //每个case后面的break
			case "2":
				System.out.println("----注册页面--------");
				System.out.println("请输入用户名:");
				String newUsername=sc.nextLine();
				System.out.println("请输入密码:");
				String newPassword=sc.nextLine();
				//把用户名和密码封装到一个对象中
				User user=new User();
				user.setUsername(newUsername);
				user.setPassword(newPassword);
				ud.regist(user);     //上次只是保存在集合，程序结束所有的信息将丢失
				System.out.println("注册成功");
				break;
			case "3":
			default:
					System.out.println("谢谢使用，欢迎下次再来");
					System.exit(0);
					break;
			}
		}
	}
	}
	
	class UserDoImpl implements UserDo
	{
		private static File file=new File("user.txt");//创建静态成员变量
		//在这里都是try，catch组合，因为throws之后其他调用的也得抛出异常，否则会报错
		static   //跟随类的加载创建
		{
			try {
				file.createNewFile();
			} catch (IOException e) {
				System.out.println("创建文件失败");
			}
		}
		
		@Override
		public boolean isLogin(String username,String password)
		{
			boolean flag=false;
			BufferedReader br=null;
			try {
				br=new BufferedReader(new FileReader(file));    //当一开始就点击登录时文件并没有创建
				//此时会出现找不到文件错误
				String line=null;
				while((line=br.readLine())!=null)  //每个信息刚好占一行
				{
					String[] datas=line.split("=");  //拆开为两个字符串的的字符串数组
					if(datas[0].equals(username)&&datas[1].equals(password))  //看传入的的信息与文件中的信息是否相同
					{ 
						flag=true;
						break;
					}
				}
			} catch (FileNotFoundException e) {
				System.out.println("用户登录找不到信息所在的文件");
				//根据报错的类型显示信息
			}catch(IOException e)
			{
				System.out.println("用户登录失败");
			}
			finally
			{
				if(br!=null)    //需要检测是否会出现文件路径错误
				{
					try {
						br.close();
					} catch (IOException e) {
						System.out.println("用户登录释放资源失败");
					}
				}
			}
			return flag;
		}
		@Override
		public void regist(User user)
		{
			BufferedWriter bw=null;
			try {
				//在这里写入的文件信息必须为追加的方式，否则再次写入的时候会把之前的信息给删除了！！！！
				bw = new BufferedWriter(new FileWriter(file,true));
				bw.write(user.getUsername()+"="+user.getPassword());
				bw.newLine();    //写进一个信息换一行
				bw.flush();
			} catch (IOException e) {
				System.out.println("用户注册失败");
			}
			finally
			{
				if(bw!=null)   //当文件名错误时需要进行错误检测，close在finally进行
				//bw需要创建为全局变量才能在try和catch中使用
				{
				try {
					bw.close();
				} catch (IOException e) {
					System.out.println("用户注册释放资源失败");
				}
				}
			}
		}
	}


	class User
	{
		private String username;
		private String password;
		public User()
		{
		}
		public String getUsername() {
			return username;
		}
		public void setUsername(String username) {
			this.username = username;
		}
		public String getPassword() {
			return password;
		}
		public void setPassword(String password) {
			this.password = password;
		}
	}
	
	interface UserDo    //接口定义了了注册和登录的方法，需要实现
	{
		public boolean isLogin(String username,String password);
		public abstract void regist(User user);
	}
	
	
	class GuessNumber
	{
		private GuessNumber()
		{
			
		}
		
		public static void start()
		{
			//产生一个随机数
			int number=(int)(Math.random()*100+1);
			//定义一个统计变量
			int count=0;
			while(true)
			{
				//键盘录入一个数据
				Scanner sc=new Scanner(System.in);
				System.out.println("请输入数据(1-100):");
				int guessNumber=sc.nextInt();
				count++;
				//判断
				if(guessNumber>number)
				{
					System.out.println("大了");
				}
				else if(guessNumber<number)
				{
					System.out.println("小了");
				}
				else
				{
					System.out.println("用了"+count+"后猜中了");
					break;   //猜中后退出
				}
			}
		}
	}
	

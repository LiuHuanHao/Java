import java.io.File;
import java.io.FilenameFilter;
import java.io.IOException;

/*重命名功能:public boolean renameTo(File dest)   //参数是File类型
 * 如果路径名不同就是改名并剪切
 */

public class haha {
	public static void main(String[] args) throws IOException {
		
			/*File file=new File("a.txt");
			file.createNewFile();
			File newFile=new File("b.txt");
			//System.out.println(file.renameTo(newFile));
			File newFile2=new File("D:\\b.txt");
			System.out.println(file.renameTo(newFile2));*/
		/*判断功能
		 * public boolean isDirectory():判断是否是目录
		 * public boolean isFile()；判断是否是文件
		 * public boolean exists()；判断是否存在
		 * public boolean canRead():判断是否可读
		 * public boolean canWrite():判断是否可写
		 * public boolean isHidden():判断是否隐藏
		 */
		/*File file=new File("a.txt");
		file.createNewFile();
		System.out.println("isDirectory:"+file.isDirectory());
		System.out.println("isFile:"+file.isFile());
		System.out.println("exists:"+file.exists());
		System.out.println("canRead:"+file.canRead());
		System.out.println("canWrite:"+file.canWrite());
		System.out.println("isHidden:"+file.isHidden());*/
		/*获取功能
		 * public String getAbsolutePath():获取绝对路径
		 * public String getPath():获取相对路径
		 * public String getName():获取名称
		 * public long length():获取长度，字节数！！
		 * public long lastModified():获取最后一次修改时间，毫秒值
		 */
		//创建文件对象
		/*File file2=new File("demo");
		file2.mkdir();
		File file=new File("demo\\test.txt");
		System.out.println(file.createNewFile());
		System.out.println("getAbsolutePath:"+file.getAbsolutePath());
		System.out.println("getPath:"+file.getPath());
		System.out.println("length:"+file.length());
		System.out.println("lastModified:"+file.lastModified());
		
		Date d=new Date(file.lastModified());  // 把毫秒值传入Date中
		SimpleDateFormat sdf=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
		String s=sdf.format(d);
		System.out.println(s);*/
		/*获取功能
		 * public String[] list():获取目录下的所有文件或者文件夹的名称String数组
		 * public File[] listFiles():获取指定目录下的所有文件或者文件夹的File数组
		 */
		/*File file=new File("e:\\");
		String[] strArray=file.list();
		for(String s:strArray)
		{
			System.out.println(s);
		}
		File[] fileArray=file.listFiles();
		System.out.println("=======================");
		for(File f:fileArray)
		{
			System.out.println(f.getName());
		}*/
		//******************************
		//输出指定目录下指定后缀名的文件名称案例
		/*
		 * A:封装e判断目录
		 * B:获取该目录下所有文件或者文件夹的File数组
		 * C:遍历该File数组，得到每一个File数组，然后判断
		 * D:是否是文件
		 */
		/*File file=new File("e:\\");
		File[] fileArray=file.listFiles();  //listArrays有加s!
		for(File f:fileArray)
		{
			if(f.isFile())
			{
				if(f.getName().endsWith(".jpg"))
				{
					System.out.println(f.getName());
				}
			}
		}*/
		//*************************
		//可以用如下方法获取指定文件
		/*文件名称
		 * public String[] list(FilenameFilter filter)
		 * public File[] listFiles(FilenameFilter filter)
		 */
		File file=new File("D:\\");
		//获取该目录下所有文件或者文件夹的String数组
		//public String[] list(FilenameFilter filter)  //里面的参数是文件名称过滤器
		String[] strArray=file.list(new FilenameFilter()
		{
			@Override
			public boolean accept(File dir,String name)
			{
				//return true; //加不加到数组中取决于这里的返回值
				//System.out.println(dir+"---"+name);
				/*File file=new File(dir,name);
				boolean flag=file.isFile();
				boolean flag2=name.endsWith(".jpg");  //name是一个字符串
				return flag&&flag2;*/
				//可以将上面进行如下变形
				return new File(dir,name).isFile()&&name.endsWith(".jpg");
			}
		});
		for(String s:strArray)
		{
			System.out.println(s);
		}
	}
	}


import java.lang.reflect.Field;


public class setValueByReflect {
	public static void main(String[] args) throws IllegalArgumentException, IllegalAccessException, NoSuchFieldException, SecurityException {
		Person2 p=new Person2();
		Tool t=new Tool();
		t.setProperty(p,"age",12);
		t.setProperty(p,"address","海妙");
		t.setProperty(p, "name","dini");
		System.out.println(p);
	}
		
}


class Tool
{
	public void setProperty(Object obj,String propertyName,Object value) throws IllegalArgumentException, IllegalAccessException, NoSuchFieldException, SecurityException
	{
		//根据对象获取字节码文件
		Class c=obj.getClass();
		//获取该对象的propertyName成员变量,包括私有
		Field field=c.getDeclaredField(propertyName);
		//强制可读
		field.setAccessible(true);
		field.set(obj, value);
	}
}

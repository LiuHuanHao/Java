import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.util.Arrays;

/*字节输入流操作步骤
 * A:创建字节输入流对象
 * B:调用read()方法
 * C:释放资源
 */
/*
 * 读取数据的方式
 * A：int read():一次读取一个字节
 * B:int read(byte[] b):一次读取一个字节数组
 */

public class haha {
	public static void main(String[] args) throws IOException{	
		//FileInputStream(String name)
		//FileInputStream fis=new FileInputStream("haha.txt");
		//调用read()方法读取数据，并把数据显示在控制台上
		/*int by=fis.read();
		System.out.println(by); //打印的是字符的AII码
		System.out.println((char)by);  //转换为字符
		by=fis.read();
		System.out.println(by); //打印的是字符的AII码
		System.out.println((char)by);
		by=fis.read();
		System.out.println(by); //打印的是字符的AII码
		System.out.println((char)by);
		by=fis.read();//当没有元素时会返回-1
		System.out.println(by); //打印的是字符的AII码
		System.out.println((char)by);*/
		//用循环改进
		/*int by=fis.read();
		while(by!=-1) //当by==-1时表示元素已经遍历完毕
		{
			System.out.print((char)by);  //在这里不能用println，因为会有多余分号
			by=fis.read();
		}*/
		//最终版代码
		/*int by=0;
		while((by=fis.read())!=-1)
		{
			System.out.print((char)by);
			//将字节转换为字符时有中文时，由于中文不止一个字节，所以会出现错误
		}
		fis.close();*/
		//*********************************
		//字节流复制文本案例
		/*复制文本文件
		 * 数据源
		 * a.txt----读取数据------FileInputStream
		 * 目的地
		 * b.txt-----写数据-------FileOutputStream
		 */
		//封装数据源
		/*FileInputStream fis=new FileInputStream("haha.txt");
		//封装目的地
		FileOutputStream fos=new FileOutputStream("b.txt");
		int by=0;
		while((by=fis.read())!=-1)  //以字节写入
		{
			fos.write(by);
		}
		//结束时记得释放资源
		fos.close();
		fis.close();*/
		//*******************
		/*计算机如何识别什么时候将两个字节转换为中文
		 * 在计算机中中文的存储分为两个字节
		 * 第一个字节肯定是负数
		 * 第二个字节可能是负数，可能是正数，但是没有影响
		 */
		//String s="abcde";   [97, 98, 99, 100, 101]
	/*	String s="我爱你中国";   //[-26, -120, -111, -25, -120, -79, -28, -67, -96, -28, -72, -83, -27, -101, -67]
		//当字符为中文码为负数
		byte[] bys=s.getBytes();  
		System.out.println(Arrays.toString(bys));*/
		//********************************
		//字节复制图片实例
		/*FileInputStream fis=new FileInputStream("D:\\Wy.jpg");
		FileOutputStream fos=new FileOutputStream("mm.jpg");
		int by=0;
    
		while((by=fis.read())!=-1)
		{
			fos.write(by);
		}
		fos.close();
		fis.close();*/
		//************************************
		/*
		 * 一次读取一个字节数组:int read(byte[] b)
		 */
		FileInputStream fis=new FileInputStream("D:\\haha.txt");
		//定义一个字节数组
		/*byte[] bys=new byte[5];
		int len=fis.read(bys); //len为实际读取的个数
		System.out.print(len);
		System.out.println(new String(bys,0,len));
		bys=new byte[5];
		len=fis.read(bys); //当read不到的时候，会返回-1
		System.out.print(len);
		System.out.println(new String(bys,0,len));*/
		//可以用以下代码进行优化
		//byte[] bys=new byte[5];
		//数组长度一般为1024和1024的倍数
		byte[] bys=new byte[1024];
		int len=0;
		while((len=fis.read(bys))!=-1)
		{
			System.out.println(new String(bys,0,len)); //没有截取时不够会默认为之前的数据
		}
		fis.close();
	}
	}


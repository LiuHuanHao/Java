import java.text.ParseException;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Iterator;

/*
 * Iterator iterator():迭代器，集合的专用遍历方式
 * Object next():获取元素，并移动到下一个元素   返回的是Object类型
 * boolean hasNext():如果还有元素可以迭代，则返回true  
 */

public class heihei {
	public static void main(String[] args) throws ParseException {

		/*
		 * Collection c=new ArrayList(); 
		 * c.add("hello");
		 * c.add("world");
		 * c.add("java"); 
		 * Iterator it=c.iterator(); 
		 * System.out.println(it.next()); 
		 * System.out.println(it.next()); 
		 * System.out.println(it.next());  
		 * System.out.println(it.next());
		 * 当元素没有时继续索引会产生越界错误 
		 * if(it.hasNext()) //进行越界检测
		 * {
		 * 		System.out.println(it.next()); 
		 * } 
		 * //最终版代码 
		 * while(it.hasNext()) 
		 * { 
		 * 		String  s=(String)it.next(); //因为返回的Object类型，所以 //需要向下转型
		 * 		System.out.println(s); 
		 * }
		 */
		// ************************************************
		// 用集合存储3个学生对象，并对学生对象进行遍历，用迭代器进行遍历
		Collection c = new ArrayList();
		Student s1 = new Student(22, "刘焕濠"); // 注意传递参数的先后顺序
		Student s2 = new Student(19, "王瑜");
		Student s3 = new Student(-5, "our son");
		c.add(s1);
		c.add(s2);
		c.add(s3);
		/*Iterator it=c.iterator();
		while(it.hasNext())
		{
			//System.out.println(it.next());  //需要手動重寫toString方法
			Student s=(Student)it.next(); //可以將Object類型轉換爲String
			System.out.println(s.getName()+"-----------"+s.getNum());
			System.out.println(((Student)it.next()).getName()+"-------"
					+((Student)it.next()).getNum());
			//上面的方法是错误的，因为一轮进行了两次next，最后的一次next会造成越界
		}*/
		//for循环改写上面的代码
		for(Iterator it=c.iterator();it.hasNext();)
		{
			Student s=(Student)it.next();
			System.out.println(s.getName()+"--------"+s.getNum());
		}		
	}
}

class Student {
	

	public int getNum() {
		return num;
	}



	public void setNum(int num) {
		this.num = num;
	}



	public String getName() {
		return name;
	}



	public void setName(String name) {
		this.name = name;
	}



	public Student(int num, String name) {
		super();
		this.num = num;
		this.name = name;
	}



	public Student() {
		super();
		// TODO Auto-generated constructor stub
	}



	private int num;
	private String name;

	

	public String toString() {
		return "Student [num=" + num + ", name=" + name + "]";
	}
	

}
